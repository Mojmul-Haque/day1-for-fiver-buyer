{"version":3,"sources":["components/shared-components/Flex/index.js","constants/ThemeConstant.js","redux/constants/Auth.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/reducers/Auth.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","Context-api/actionsType/ThemeActionType.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","Context-api/reducers/themeReducer.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_LIGHT","SIDE_NAV_DARK","NAV_TYPE_SIDE","NAV_TYPE_TOP","DIR_LTR","DIR_RTL","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","currentTheme","direction","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","reducers","combineReducers","Auth","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","useContext","MainContext","routeInfo","hideGroupTitle","localization","utils","getBreakPoint","includes","theme","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","MenuContent","Sider","Layout","SideNav","width","collapsed","autoHide","TopNav","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isMobile","isNavTop","mobileLogo","getLogo","getLogoDisplay","Logo","src","alt","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","MobileNav","dispatch","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","NavLanguage","configDisplay","languageOption","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","ThemeConfigurator","configState","useThemeSwitcher","switcher","themes","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","SettingOutlined","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","NavSearch","CloseOutlined","Header","HeaderNav","searchActive","setSearchActive","onSearchClose","navMode","logoType","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","from","memo","Content","AppLayout","useLocation","currentRouteInfo","isNavSide","getLayoutGutter","status","paddingLeft","paddingRight","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","body","classList","add","removeBodyClass","remove","Views","currentAppLocale","Array","exact","initialThemeState","themeReducer","dark","process","light","createContext","App","useReducer","Provider","themeMap","defaultTheme","insertionPoint","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"kGAAA,gBAGMA,EAAO,SAAAC,GACZ,IAAQC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,KAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,gUC5Bf,gRAAO,IACMS,EAAiB,IACjBC,EAA2B,GAC3BC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAgB,OAChBC,EAAe,MACfC,EAAU,MACVC,EAAU,O,4ytBCRvB,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,sC,sNCVrCC,EAAW,SACXC,ECAA,CACXC,iBAAkB,wBDDYA,iBACnBC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC3BC,cAAc,EACdC,aAAc3B,IACd4B,OAAQ,KACRC,QAAS3B,IACT4B,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,QACdC,UAAW9B,M,4IELN+B,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQ3B,MAiEf4B,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC3C,OAAQA,EAAOC,MACd,KAAKvC,IACJ,OAAO,2BACHqC,GADJ,IAECR,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAEhB,KAAK5B,IACJ,OAAO,2BACHgC,GADJ,IAECP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKvB,IACJ,OAAO,2BACH+B,GADJ,IAECP,QAAS,GACTC,aAAa,IAEf,KAAK7B,IACJ,OAAO,2BACHmC,GADJ,IAECJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKzB,IACJ,OAAO,2BACFiC,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAGjB,KAAK1B,IACJ,OAAO,2BACH8B,GADJ,IAECR,SAAS,IAGX,KAAKnB,IAOL,KAAKE,IACJ,OAAO,2BACHyB,GADJ,IAECR,SAAS,EACTI,MAAOK,EAAOL,QAGhB,QACC,OAAOI,ICvEKG,EAJEC,YAAgB,CAC/BL,KAAMM,I,0DCOOC,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACMnB,EAAOgB,IAAShB,OAEhBoB,GADcpB,EAAKqB,YACE,IAAIL,IAAShB,KAAKsB,oBACvCC,EAAuB,IAAIP,IAAShB,KAAKwB,qBCVzCC,GDWsB,IAAIT,IAAShB,KAAK0B,oBACnB,IAAIV,IAAShB,KAAK2B,mBCZrB,IAExBF,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC9B/B,EAAKgC,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADnD,mFAArC,wDAGAX,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC7B/B,EAAKgC,2BAA2BH,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADpD,mFAArC,wDAGAX,EAAgBY,eAAhB,sBAAiC,sBAAAN,EAAA,sEAC1B/B,EAAKsC,UAAUL,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADrB,mFAGjCX,EAAgBc,oBAAhB,sBAAsC,sBAAAR,EAAA,sEAC9B/B,EAAKwC,gBAAgBpB,GAAoBa,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGtCX,EAAgBgB,sBAAhB,sBAAwC,sBAAAV,EAAA,sEAChC/B,EAAKwC,gBAAgBjB,GAAsBU,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGxCX,EAAgBiB,mBAAhB,uCAAqC,WAAOb,EAAOC,GAAd,SAAAC,EAAA,sEAC9B/B,EAAK2C,+BAA+Bd,EAAOC,GAAUG,MAAK,SAAAC,GAAI,OAAIA,KAAMC,OAAM,SAAAC,GAAG,OAAIA,KADvD,mFAArC,wDAGeX,Q,WCFEmB,G,WAiBAN,G,WAgBAO,G,WAkBAC,G,WAgBAC,G,WAgBQC,GAnFlB,SAAUJ,IAAV,iEACL,OADK,SACCK,YAAUtF,IAAD,UAAS,2FAGV,OAHsBuF,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBG,mBAAoBC,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdxC,QAJc,iBAKtB,OALsB,SAKhB0D,YAAIC,YAAgBnB,EAAKxC,UALT,+BAQtB,OADAI,aAAawD,QAAQlF,IAAY8D,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAII,YAActB,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAiBA,SAAUf,IAAV,iEACL,OADK,SACCW,YAAUpF,IAAD,UAAU,oFAEJ,OAFI,kBAEEsF,YAAK1B,EAAgBY,gBAFvB,eAGJoB,KADdC,EAFkB,yBAKvB,OADA5D,aAAa6D,WAAWvF,KAJD,SAKjBgF,YAAIQ,YAAeF,IALF,+BAOvB,OAPuB,UAOjBN,YAAIC,YAAgBK,EAAYhE,UAPf,gCAUxB,OAVwB,oCAUlB0D,YAAIC,YAAgB,EAAD,KAVD,0DADpB,uCAgBA,SAAUR,IAAV,iEACL,OADK,SACCI,YAAUlF,IAAD,UAAS,2FAGV,OAHsBmF,EAAZ,EAAYA,QAC7BrB,EAAmBqB,EAAnBrB,MAAOC,EAAYoB,EAAZpB,SADU,kBAGJqB,YAAK1B,EAAgBiB,mBAAoBb,EAAOC,GAH5C,YAGjBI,EAHiB,QAIdxC,QAJc,iBAKtB,OALsB,SAKhB0D,YAAIC,YAAgBnB,EAAKxC,UALT,+BAQtB,OADAI,aAAawD,QAAQlF,IAAY8D,EAAKA,KAAKqB,KAPrB,UAQhBH,YAAIS,YAAc3B,EAAKA,KAAKqB,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAkBA,SAAUP,IAAV,iEACL,OADK,SACCG,YAAU5E,IAAD,UAAqB,oFAEtB,OAFsB,kBAEhB8E,YAAK1B,EAAgBc,qBAFL,YAE7BL,EAF6B,QAG1BxC,QAH0B,gBAIlC,OAJkC,SAI5B0D,YAAIC,YAAgBnB,EAAKxC,UAJG,8BAOlC,OADAI,aAAawD,QAAQlF,IAAY8D,EAAKA,KAAKqB,KANT,UAO5BH,YAAIU,YAA8B5B,EAAKA,KAAKqB,MAPhB,gCAUnC,OAVmC,oCAU7BH,YAAIC,YAAgB,EAAD,KAVU,0DAD/B,uCAgBA,SAAUN,IAAV,iEACL,OADK,SACCE,YAAU1E,IAAD,UAAuB,oFAExB,OAFwB,kBAElB4E,YAAK1B,EAAgBgB,uBAFH,YAE/BP,EAF+B,QAG5BxC,QAH4B,gBAIpC,OAJoC,SAI9B0D,YAAIC,YAAgBnB,EAAKxC,UAJK,8BAOpC,OADAI,aAAawD,QAAQlF,IAAY8D,EAAKA,KAAKqB,KANP,UAO9BH,YAAIW,YAAgC7B,EAAKA,KAAKqB,MAPhB,gCAUrC,OAVqC,oCAU/BH,YAAIC,YAAgB,EAAD,KAVY,0DADjC,uCAgBQ,SAAUL,IAAV,iEACb,OADa,SACPgB,YAAI,CACVC,YAAKrB,GACLqB,YAAK3B,GACL2B,YAAKpB,GACLoB,YAAKnB,GACLmB,YAAKlB,KANQ,uC,eCpGUC,GAAV,SAAUA,EAASkB,GAAnB,iEACb,OADa,SACPF,YAAI,CACR1D,MAFW,uCCEf,IAAM6D,EAAiBC,cAEjBC,EAAc,CAACF,GAqBrB,IAEeG,EArBf,SAAwBC,GAEtB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YAAYxE,EAAUmE,EAAgBC,EAClDK,IAAe,WAAf,EAAmBR,KAYrB,OATAF,EAAeW,IAAI9B,GASZsB,EAGKS,G,sFCxBCC,gBADK,SAAArI,GAAK,OAAI,eAAC,IAAD,eAAsBA,MACZ,CACrCsI,SAAS,I,sCCMIC,GATf,gKACC,WACC,MAA6BC,KAAKxI,MAA1BwD,EAAR,EAAQA,KAAMtD,EAAd,EAAcA,UACd,OACC,qCAAGuI,IAAMC,cAAclF,EAAM,CAAEtD,UAAWA,UAJ7C,GAA0ByI,a,mBCGpBC,GAAmB,CAAC,CACxBC,IAAK,OACLC,KAAK,GAAD,OAAK7G,KAAL,SACJ8G,MAAO,OACPC,KAAMC,KACNC,YAAY,EACZC,QAAS,KAOIC,GAJO,UACjBR,ICwMUS,G,qGAhNd,SAAsBC,GACrB,IAAIC,EAAWD,EAAKE,MAAM,UAAY,GACtC,QAASD,EAASE,SAAW,KAAOF,EAASG,OAAS,KAAKC,gB,0BAS5D,SAAoBC,EAASd,GAC5B,GAAIc,EAAQd,OAASA,EACnB,OAAOc,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQrB,KAAKwB,aAAaJ,EAAQE,GAAIhB,IAErC,OAAOe,EAIV,OAAOA,I,8BAQR,SAAwBI,GACvB,IAAIA,EACH,MAAO,OASR,SAASC,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBD,GAG4BI,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAON,GAMwC,IAF9D,SAAgBE,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOP,IAKiD,IARpD,IAUV,OAEA,U,wBAUT,SAAkBQ,EAAOC,GACxB,IAAIC,EAAIL,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAASG,EAAMJ,UAAU,EAAE,GAAG,IAClCQ,EAAIP,SAASG,EAAMJ,UAAU,EAAE,GAAG,IACtCM,EAAIL,SAASK,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIN,SAASM,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIP,SAASO,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGCI,SAAS,IAAIC,OAAhB,WAAoCL,EAAEI,SAAS,KAAQJ,EAAEI,SAAS,IACxEE,EAAiC,IAA1BL,EAAEG,SAAS,IAAIC,OAAhB,WAAoCJ,EAAEG,SAAS,KAAQH,EAAEG,SAAS,IACxEG,EAAiC,IAA1BL,EAAEE,SAAS,IAAIC,OAAhB,WAAoCH,EAAEE,SAAS,KAAQF,EAAEE,SAAS,IAC9E,MAAM,IAAN,OAAWD,GAAX,OAAgBG,GAAhB,OAAqBC,K,uBAQtB,SAAiBC,GAChB,IAAMC,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAUJ,EAAKd,UAAUc,EAAKK,QAAQ,MAAMC,MAAM,KACvDC,EAAIpB,SAASc,EAAKG,EAAQ,GAAGlB,UAAU,IAAK,IAC5CsB,EAAIrB,SAASc,EAAKG,EAAQ,IAAK,IAC/BK,EAAItB,SAASc,EAAKG,EAAQ,IAAK,IAC/BnG,EAAIyG,WAAWT,EAAKG,EAAQ,GAAGlB,UAAU,EAAGkB,EAAQ,GAAGP,OAAS,KAAKc,QAAQ,GACvEC,EAAW,CACjBL,EAAEX,SAAS,IACXY,EAAEZ,SAAS,IACXa,EAAEb,SAAS,IACXiB,KAAKC,MAAU,IAAJ7G,GAAS2F,SAAS,IAAIV,UAAU,EAAG,IAQ/C,OALA0B,EAASG,SAAQ,SAAUC,EAAMC,GACZ,IAAhBD,EAAKnB,SACRe,EAASK,GAAK,IAAMD,MAGhB,IAAN,OAAYJ,EAASM,KAAK,O,wBAU3B,SAAkBC,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,6BAUR,SAAuBpH,EAAGwG,EAAG/C,GAC5B,MAAqB,kBAAXzD,EAAEyD,IAAuC,kBAAX+C,EAAE/C,GAClCzD,EAAEyD,GAAO+C,EAAE/C,GAGE,kBAAXzD,EAAEyD,IAAuC,kBAAX+C,EAAE/C,IACzCzD,EAAIA,EAAEyD,GAAK4D,gBACXb,EAAIA,EAAE/C,GAAK4D,gBACK,EAAIb,EAAIxG,EAAI,EAAI,OAHjC,I,yBAeD,SAAmBsH,EAAM7D,EAAK8D,GAC7B,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAKjE,KAAS8D,MAEnCC,I,4BAUR,SAAsBF,EAAM7D,EAAK8D,GAChC,IAAIC,EAAOF,EAIX,OAHGA,IACFE,EAAOF,EAAKG,QAAO,SAAAC,GAAI,OAAIA,EAAKjE,KAAS8D,MAEnCC,I,4BASR,SAAsBF,EAAMK,GAY3B,OADAL,EAAOA,EAAKG,QAAO,SAAAF,GAAK,OAVL,SAACG,GACnB,IAAK,IAAIjE,KAAOiE,EACf,GAAiB,MAAbA,EAAKjE,KAG2E,IAAhFiE,EAAKjE,GAAKkC,WAAWpB,cAAc6B,QAAQuB,EAAMhC,WAAWpB,eAC/D,OAAO,EAIkBqD,CAAWL,Q,2BASxC,SAAqBM,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMrE,KAAOoE,EAAS,CAC1B,GAAIA,EAAQlD,eAAelB,GACVoE,EAAQpE,IAEvBqE,EAAYC,KAAKtE,GAIpB,OAAOqE,M,KCxMDE,GAAYC,IAAZD,QACAE,GAAkBC,IAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OAChBD,EAAa,eAAC,GAAD,CAAaE,GAAID,IAAgBA,EAAU3C,YAEpD6C,GAAiB,SAAC/E,GACtB,IAAIgF,EAAU,GACVC,EAAY,GAChB,GAAIjF,EAEF,IADA,IAAMkF,EAAMlF,EAAI4C,MAAM,KACbuC,EAAQ,EAAGA,EAAQD,EAAI/C,OAAQgD,IAAS,CAC/C,IAAMC,EAAMF,EAAIC,GACDF,EAAL,IAAVE,EAA2BC,EAAiB,UAAMH,EAAN,YAAmBG,GAC/DJ,EAAQV,KAAKW,GAGjB,OAAOD,GAGHK,GAAiB,SAAClO,GACtB,MAAmBmO,qBAAWC,IACtB/L,GADR,oBACkErC,EAA1DqC,cAAcgM,EAA4CrO,EAA5CqO,UAAWC,EAAiCtO,EAAjCsO,eAAgBC,EAAiBvO,EAAjBuO,aAC/BC,GAAMC,cAAcnB,MAAiBoB,SAAS,MAOhE,OACE,eAAC,IAAD,CACEC,MAAOtM,IAAiB3B,IAAiB,QAAU,OACnDkO,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACX,QAAD,IAACA,OAAD,EAACA,EAAWxF,KACjCoG,gBAAiBrB,GAAc,OAACS,QAAD,IAACA,OAAD,EAACA,EAAWxF,KAC3C3I,UAAWoO,EAAiB,mBAAqB,GANnD,SAQGlF,GAAiB8F,KAAI,SAACC,GAAD,OACpBA,EAAKhG,QAAQ6B,OAAS,EACpB,eAAC,IAAKoE,UAAN,CAEErG,MAAOyE,GAAUe,EAAcY,EAAKpG,OAFtC,SAIGoG,EAAKhG,QAAQ+F,KAAI,SAACG,GAAD,OAChBA,EAAalG,QAAQ6B,OAAS,EAC5B,eAACoC,GAAD,CACEpE,KACEqG,EAAarG,KACX,eAAC,GAAD,CAAMxF,KAAI,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KAGND,MAAOyE,GAAUe,EAAcc,EAAatG,OAP9C,SASGsG,EAAalG,QAAQ+F,KAAI,SAACI,GAAD,OACxB,gBAAC,IAAKC,KAAN,WACGD,EAActG,KACb,eAAC,GAAD,CAAMxF,KAAI,OAAE8L,QAAF,IAAEA,OAAF,EAAEA,EAAetG,OACzB,KACJ,gCACGwE,GAAUe,EAAce,EAAcvG,SAEzC,eAAC,IAAD,CACEyG,QAAS,aACTC,GAAIH,EAAcxG,SATNwG,EAAczG,SAJ3BwG,EAAaxG,KAmBpB,gBAAC,IAAK0G,KAAN,WACGF,EAAarG,KAAO,eAAC,GAAD,CAAMxF,KAAM6L,EAAarG,OAAW,KACzD,gCAAOwE,GAAUe,EAAcc,EAAatG,SAC5C,eAAC,IAAD,CACEyG,QAAS,aACTC,GAAIJ,EAAavG,SALLuG,EAAaxG,SA9B5BsG,EAAKtG,KA0CZ,gBAAC,IAAK0G,KAAN,WACGJ,EAAKnG,KAAO,eAAC,GAAD,CAAMxF,KAAI,OAAE2L,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,gCAAOwE,GAAUe,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMpG,SACpCoG,EAAKrG,KACJ,eAAC,IAAD,CAAM0G,QAAS,aAAwBC,GAAIN,EAAKrG,OAC9C,OALUqG,EAAKtG,WAazB6G,GAAgB,SAAC1P,GACrB,IAAQwC,EAA8BxC,EAA9BwC,YAAa+L,EAAiBvO,EAAjBuO,aACrB,OACE,eAAC,IAAD,CAAMK,KAAK,aAAaC,MAAO,CAAEc,gBAAiBnN,GAAlD,SACG4G,GAAiB8F,KAAI,SAACC,GAAD,OACpBA,EAAKhG,QAAQ6B,OAAS,EACpB,eAACoC,GAAD,CAEEwC,eAAe,eACf7G,MACE,kCACGoG,EAAKnG,KAAO,eAAC,GAAD,CAAMxF,KAAI,OAAE2L,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,gCAAOwE,GAAUe,EAAcY,EAAKpG,YAN1C,SAUGoG,EAAKhG,QAAQ+F,KAAI,SAACG,GAAD,OAChBA,EAAalG,QAAQ6B,OAAS,EAC5B,eAACoC,GAAD,CAEEpE,KACEqG,EAAarG,KACX,eAAC,GAAD,CAAMxF,KAAI,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KAEND,MAAOyE,GAAUe,EAAcc,EAAatG,OAP9C,SASGsG,EAAalG,QAAQ+F,KAAI,SAACI,GAAD,OACxB,gBAAC,IAAKC,KAAN,WACE,gCACG/B,GAAUe,EAAce,EAAcvG,SAEzC,eAAC,IAAD,CAAM0G,GAAIH,EAAcxG,SAJVwG,EAAczG,SAT3BwG,EAAaxG,KAkBpB,gBAAC,IAAK0G,KAAN,WACGF,EAAarG,KACZ,eAAC,GAAD,CAAMxF,KAAI,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,OACxB,KACJ,gCAAOwE,GAAUe,EAAcc,EAAatG,SAC5C,eAAC,IAAD,CAAM0G,GAAIJ,EAAavG,SALTuG,EAAaxG,SA9B5BsG,EAAKtG,KAyCZ,gBAAC,IAAK0G,KAAN,WACGJ,EAAKnG,KAAO,eAAC,GAAD,CAAMxF,KAAI,OAAE2L,QAAF,IAAEA,OAAF,EAAEA,EAAMnG,OAAW,KAC1C,gCAAOwE,GAAUe,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMpG,SACpCoG,EAAKrG,KAAO,eAAC,IAAD,CAAM2G,GAAIN,EAAKrG,OAAW,OAHzBqG,EAAKtG,WAmBhBgH,GARK,SAAC7P,GACnB,OAAOA,EAAMwD,OAAS5C,IACpB,eAAC,GAAD,eAAoBZ,IAEpB,eAAC,GAAD,eAAmBA,KChKf8P,GAAUC,IAAVD,MAqBOE,GAnBQ,WACrB,MAAgB7B,qBAAWC,IAApB9K,EAAP,oBAGA,OAFAA,EAAMiL,cAAe,EACrBjL,EAAMgL,eAAiB,GAErB,eAACwB,GAAD,CACE5P,UAAS,mBACPoD,EAAMjB,eAAiB1B,IAAgB,gBAAkB,IAE3DsP,MAAOzP,IACP0P,UAAW5M,EAAMlB,aALnB,SAOE,eAAC,aAAD,CAAY+N,UAAQ,EAApB,SACE,eAAC,GAAD,aAAa3M,KAAM5C,KAAmB0C,SCN/B8M,GAdO,WACpB,MAAgBjC,qBAAWC,IAApB9K,EAAP,oBACA,OACE,sBACEpD,UAAS,kBAAasO,GAAM6B,iBAAiB/M,EAAMd,cACnDqM,MAAO,CAAEc,gBAAiBrM,EAAMd,aAFlC,SAIE,sBAAKtC,UAAU,kBAAf,SACE,eAAC,GAAD,aAAasD,KAAM3C,KAAkByC,S,mBCTvCiF,GAAO,eAAC+H,GAAA,EAAD,CAAiBzB,MAAO,CAAE0B,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAACzQ,GAChB,IAAQ0Q,EAAiB1Q,EAAjB0Q,MAAOC,EAAU3Q,EAAV2Q,MACf,OACC,sBAAKzQ,UAAS,uBAAkBwQ,EAAlB,kBAAiCC,GAA/C,SACC,eAAC,KAAD,CAAMC,UAAWrI,QAUpBkI,GAAQlQ,aAAe,CACtBmQ,MAAO,SACPC,MAAO,UAGOF,U,UCfPnD,GAAkBC,IAAlBD,cAEFuD,GAAqB,SAAC7Q,EAAO8Q,GACjC,IAAQ1O,EAA0BpC,EAA1BoC,aACF2O,EAD4B/Q,EAAZuC,UACO1B,IAC7B,OAAIiQ,IAAa9Q,EAAMgR,WACd,EAELD,EACK,OAGD,GAAN,OADE3O,EACQ3B,IAEAD,IAFV,OAMEyQ,GAAU,SAACjR,GACf,IAAQoC,EAA+BpC,EAA/BoC,aACR,MAAqB,SADkBpC,EAAjB2C,aAEhBP,EACK,yBAEF,sBAGLA,EACK,mBAEF,iBAGH8O,GAAiB,SAACJ,EAAUE,GAChC,OAAIF,IAAaE,EACR,SAEA,QAiBIG,GAbK,WAClB,MAAgBhD,qBAAWC,IAApB9K,EAAP,oBACMwN,GAAYtC,GAAMC,cAAcnB,MAAiBoB,SAAS,MAChE,OACE,sBACExO,UAAWgR,GAAeJ,EAAUxN,EAAM0N,YAC1CnC,MAAO,CAAEoB,MAAM,GAAD,OAAKY,GAAmBvN,EAAOwN,KAF/C,SAIE,sBAAKM,IAAKH,GAAQ3N,GAAQ+N,IAAG,UAAKvP,KAAL,c,oBC5DtBwP,GAAuB,uBACvBC,GAAgB,gBAChBC,GAAwB,wBACxBC,GAAkB,kBAClBC,GAAuB,uBACvBC,GAA0B,0BAC1BC,GAAoB,oBACpBC,GAAe,eACfC,GAAmB,mBCoCjBC,GAjCU,WACvB,MAA0B5D,qBAAWC,IAArC,mBAAO9K,EAAP,KAAc0O,EAAd,KACQtP,EAAcY,EAAdZ,UACFuP,EAAU,WACdD,EAAS,CAAExO,KAAMoO,GAAmBrL,SAAS,KAG/C,OACE,eAAC,KAAD,CACE2L,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAAS1P,EACT2P,UAAW,CAAEC,QAAS,GALxB,SAOE,gBAACvS,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,gBAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,eAAC,GAAD,CAAM6Q,YAAY,IAClB,sBAAK9Q,UAAU,YAAYsP,QAAS,kBAAMyC,KAA1C,SACE,eAACM,GAAA,EAAD,SAGJ,sBAAKrS,UAAU,kBAAf,SACE,eAAC,aAAD,CAAYiQ,UAAQ,EAApB,SACE,eAAC,GAAD,aAAa3M,KAAM5C,KAAmB0C,c,0FCiBnCkP,GAhDK,SAAAxS,GAEnB,IAAQyS,EAA0BzS,EAA1ByS,YAAR,EAAkCzS,EAAbyK,aAArB,MAA2B,GAA3B,EAEA,EAA8BiI,oBAAS,GAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAsCD,mBAASjI,GAA/C,mBAAOmI,EAAP,KAAoBC,EAApB,KACA,EAAgCH,mBAASjI,GAAzC,mBAAOqI,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACTD,EAAYtI,GACZoI,EAAepI,KACb,CAACA,IAEJ,IAAMwI,EAAmB,WACxBN,GAAYP,IAWb,OACC,uBAAKlS,UAAU,eAAf,UACC,sBAAKA,UAAU,wBAAf,SACC,sBAAKA,UAAU,QAAQ2O,MAAO,CAACc,gBAAiBmD,GAAsB,WAAYtD,QAASyD,MAG3Fb,GACC,uCACC,sBAAKlS,UAAU,wBAAwBsP,QAASyD,IAChD,eAAC,KAAD,CAAcxI,MAAOmI,EAAaM,SAjBjB,SAACvG,GACtB,IAAOwG,EAAOxG,EAAPwG,IACDhI,EAAI,cAAUgI,EAAIzH,EAAd,aAAoByH,EAAIxH,EAAxB,aAA8BwH,EAAIvH,EAAlC,aAAwCuH,EAAI/N,EAA5C,KACV2N,EAAY5H,GACZ0H,EAAeM,GACfV,EAAY9F,a,uECdd,IAAMyG,GAAmB,SAAC,GAAgB,IAClCC,EANR,SAA2B/Q,GAEzB,OADagR,GAAKzG,QAAO,SAACoB,GAAD,OAASA,EAAIsF,SAAWjR,KACrC,GAIKkR,CADsB,EAAblR,QAElBmR,EAAmBJ,EAAnBI,SAAUzK,EAASqK,EAATrK,KAClB,OACE,uBAAK9I,UAAU,4BAAf,UACE,sBACE2O,MAAO,CAAE6E,SAAU,QACnBtC,IAAG,qBAAgBpI,EAAhB,QACHqI,IAAKoC,IAEP,wBAAMvT,UAAU,4BAAhB,UACGuT,EADH,IACa,eAACE,GAAA,EAAD,CAAczT,UAAU,wBA+D5B0T,GAzDY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAA0B1F,qBAAWC,IAArC,mBAAO9K,EAAP,KAAc0O,EAAd,KACQ1P,EAAWgB,EAAXhB,OACFwR,EACJ,eAAC,IAAD,UACGR,GAAKpE,KAAI,SAACjB,EAAK7B,GACd,OACE,eAAC,IAAKmD,KAAN,CAEErP,UACEoC,IAAW2L,EAAIsF,OAAS,gCAAkC,GAE5D/D,QAAS,kBACPwC,EAAS,CAAExO,KAAM+N,GAAehL,QAAS0H,EAAIsF,UANjD,SASE,wBAAMrT,UAAU,oDAAhB,UACE,iCACE,sBACE2O,MAAO,CAAE6E,SAAU,QACnBtC,IAAG,qBAAgBnD,EAAIjF,KAApB,QACHqI,IAAKpD,EAAIwF,WAEX,uBAAMvT,UAAU,0BAAhB,SAA2C+N,EAAIwF,cAEhDnR,IAAW2L,EAAIsF,OACd,eAACQ,GAAA,EAAD,CAAe7T,UAAU,iBACvB,SAnBDkM,QA0Bf,OACE,eAAC,KAAD,CACE8F,UAAU,cACV8B,QAASF,EACTG,QAAS,CAAC,SAHZ,SAKGJ,EACC,oBAAGK,KAAK,KAAKhU,UAAU,YAAYsP,QAAS,SAAC2E,GAAD,OAAOA,EAAEC,kBAArD,SACE,eAAC,GAAD,CAAkB9R,OAAQA,MAG5B,eAAC,IAAD,CAAMsM,KAAK,aAAX,SACE,eAAC,IAAKW,KAAN,UACE,oBAAG2E,KAAK,KAAK1E,QAAS,SAAC2E,GAAD,OAAOA,EAAEC,kBAA/B,SACE,eAACC,GAAA,EAAD,CAAgBnU,UAAU,2B,UCjDlCoU,GAAe,CAAC,UAAW,UAAW,UAAW,UAAW,WAE5DC,GAAa,SAAC,GAAD,IAAGjL,EAAH,EAAGA,KAAMkL,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,SAA7B,OACjB,uBACExU,UAAS,eACPwU,EAAW,GAAK,qDAFpB,UAKE,sBACExU,UAAS,UAAKuU,EAAW,cAAgB,GAAhC,YAAsCC,EAAW,OAAS,IADrE,SAGGpL,IAEH,+BAAMkL,QAsMKG,GAlMkB,WAC/B,IA+D4BC,EA/D5B,EAA0BzG,qBAAWC,IAArC,mBAAO9K,EAAP,KAAc0O,EAAd,KAEEzP,EAQEe,EARFf,QACAF,EAOEiB,EAPFjB,aACAD,EAMEkB,EANFlB,aACAI,EAKEc,EALFd,YACAC,EAIEa,EAJFb,eACAH,EAGEgB,EAHFhB,OACAK,EAEEW,EAFFX,aACAC,EACEU,EADFV,UAGImO,EAAWxO,IAAY1B,IAE7B,EAA6BgU,8BAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAoDlB,OACE,uCACE,uBAAK7U,UAAU,OAAf,UACE,qBAAIA,UAAU,wBAAd,wBACC6Q,EACC,qCACE,eAAC,GAAD,CACEzH,KAAK,iBACLoL,UAAQ,EACRF,SACE,eAAC,GAAD,CACE/J,MAAOjI,EACPiQ,YAzBY,SAAC9F,GAE3BqF,EAAS,CAAExO,KAAMmO,GAAyBpL,QAAS,KACnD,IAAQ4M,EAAQxG,EAARwG,IACFhI,EAAI,eAAWgI,EAAIzH,EAAf,aAAqByH,EAAIxH,EAAzB,aAA+BwH,EAAIvH,EAAnC,aAAyCuH,EAAI/N,EAA7C,KACJ6E,EAAMuE,GAAMwG,UAAU7J,GAE5B6G,EAAS,CAAExO,KAAMkO,GAAsBnL,QAAS0D,WAwB1C,qCACE,eAAC,GAAD,CACEX,KAAK,oBACLoL,UAAQ,EACRF,SACE,eAAC,GAAD,CACE/J,MAAOhI,EACPgQ,YA9Ce,SAAC9F,GAC9B,IAAQwG,EAAQxG,EAARwG,IACFhI,EAAI,eAAWgI,EAAIzH,EAAf,aAAqByH,EAAIxH,EAAzB,aAA+BwH,EAAIvH,EAAnC,aAAyCuH,EAAI/N,EAA7C,KACJ6E,EAAMuE,GAAMwG,UAAU7J,GAC5B6G,EAAS,CAAExO,KAAMmO,GAAyBpL,QAAS0D,WAiD/C,eAAC,GAAD,CACEX,KAAK,mBACLkL,SACE,gBAAC,KAAMS,MAAP,CACEC,KAAK,QACLhC,SAAU,SAACiB,GAAD,OApEGxH,EAoEoBwH,EAAEgB,OAAOxI,MAnEpDqF,EAAS,CAAExO,KAAMmO,GAAyBpL,QAAS,KAC/CoG,IAAU9L,MACZmR,EAAS,CAAExO,KAAMkO,GAAsBnL,QAAS+N,GAAa,KAC7DtC,EAAS,CAAExO,KAAM8N,GAAsB/K,SAAS,UAElDyL,EAAS,CAAExO,KAAMiO,GAAiBlL,QAASoG,IANrB,IAACA,GAqEbA,MAAOpK,EAHT,UAKE,eAAC,KAAM6S,OAAP,CAAczI,MAAO/L,IAArB,kBACA,eAAC,KAAMwU,OAAP,CAAczI,MAAO9L,IAArB,sBAIN,eAAC,GAAD,CACEyI,KAAK,kBACLkL,SACE,gBAAC,KAAMS,MAAP,CACER,SAAU1D,EACVmE,KAAK,QACLhC,SAAU,SAACiB,GAAD,OACRnC,EAAS,CACPxO,KAAMgO,GACNjL,QAAS4N,EAAEgB,OAAOxI,SAGtBA,MAAOtK,EATT,UAWE,eAAC,KAAM+S,OAAP,CAAczI,MAAOjM,IAArB,mBACA,eAAC,KAAM0U,OAAP,CAAczI,MAAOhM,IAArB,qBAGJ8T,SAAU1D,IAEZ,eAAC,GAAD,CACEzH,KAAK,qBACLkL,SACE,eAAC,KAAD,CACEC,SAAU1D,EACVsE,QAASjT,EACT8Q,SA3GkB,WAC5BlB,EAAS,CAAExO,KAAM8N,GAAsB/K,SAAUnE,OA6G3CqS,SAAU1D,IAEZ,eAAC,GAAD,CACEzH,KAAK,cACLkL,SACE,eAAC,KAAD,CAAQa,QAA0B,SAAjB1S,EAAyBuQ,SAhI/B,SAACoC,GACpBtD,EAAS,CAAExO,KAAMmO,GAAyBpL,QAAS,KACnD,IAAMgP,EAAeD,EAAY,OAAS,QAC1CtD,EAAS,CAAExO,KAAMqO,GAActL,QAASgP,IACxCT,EAAS,CAAEnG,MAAOoG,EAAOQ,UA+HrB,eAAC,GAAD,CACEjM,KAAK,aACLkL,SACE,gBAAC,KAAMS,MAAP,CACEC,KAAK,QACLhC,SAhIY,SAACiB,GACvBnC,EAAS,CAAExO,KAAMsO,GAAkBvL,QAAS4N,EAAEgB,OAAOxI,SAgI3CA,MAAO/J,EAHT,UAKE,eAAC,KAAMwS,OAAP,CAAczI,MAAO7L,IAArB,iBACA,eAAC,KAAMsU,OAAP,CAAczI,MAAO5L,IAArB,yBAKR,uBAAKb,UAAU,OAAf,UACE,qBAAIA,UAAU,wBAAd,oBACA,eAAC,GAAD,CAAYoJ,KAAK,YAAYkL,SAAU,eAAC,GAAD,CAAaX,eAAa,SAEnE,+BACE,eAAC,KAAD,CACE2B,MAzGoBZ,EAyGK,CACvBrS,UACAF,eACAD,eACAI,cACAC,iBACAH,SACAK,eACAC,aAhHR6S,KAAKC,UAAUd,EAAa,KAAM,IAkH5Be,OAAQ,kBACN5S,KAAQ6S,QACN,qFAbN,SAiBE,eAAC,KAAD,CAAQ5M,KAAM,eAAC6M,GAAA,EAAD,IAAkBC,OAAK,EAArC,SACE,2DC5LGC,GArCf,+MACEzS,MAAQ,CAAE8O,SAAS,GADrB,EAGE4D,WAAa,WACX,EAAKC,SAAS,CACZ7D,SAAS,KALf,EASEH,QAAU,WACR,EAAKgE,SAAS,CACZ7D,SAAS,KAXf,6CAeE,WACE,OACE,uCACE,eAAC,IAAD,CAAMxD,KAAK,aAAX,SACE,eAAC,IAAKW,KAAN,CAAWC,QAAShH,KAAKwN,WAAzB,SACE,eAACE,GAAA,EAAD,CAAiBhW,UAAU,sBAG/B,eAAC,KAAD,CACE6I,MAAM,eACNmJ,UAAW1J,KAAKxI,MAAM4C,YAAc7B,IAAU,OAAS,QACvDkP,MAAO,IACPgC,QAASzJ,KAAKyJ,QACdG,QAAS5J,KAAKlF,MAAM8O,QALtB,SAOE,eAAC,GAAD,aA9BV,GAA8BzJ,a,gFCoB9B,IAAMwN,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQpN,QAAQ6B,QAClBsL,EAAWnJ,KAAKoJ,GAEdA,EAAQpN,QAAQ6B,OAAS,GAC3BoL,EAAcG,EAAQpN,QAASmN,IAPkB,8BAUnD,OAAOA,EAGWF,CAAchN,IAE3BoN,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,eAACxN,GAAA,EAAD,CAAmB/I,UAAU,iBACrC,IAAK,OACJ,OAAO,eAACwW,GAAA,EAAD,CAAkBxW,UAAU,gBACpC,IAAK,aACJ,OAAO,eAACyW,GAAA,EAAD,CAAmBzW,UAAU,iBACrC,IAAK,QACJ,OAAO,eAAC0W,GAAA,EAAD,CAAkB1W,UAAU,iBACpC,QACC,OAAO,OAqEK2W,GA7CK,SAAA7W,GACnB,IAAQ8W,EAAkC9W,EAAlC8W,OAAQC,EAA0B/W,EAA1B+W,MAAOjG,EAAmB9Q,EAAnB8Q,SAAUlC,EAAS5O,EAAT4O,KACjC,EAA0B8D,mBAAS,IAAnC,mBAAO/F,EAAP,KAAcqK,EAAd,KACA,EAA8BtE,mBAAS,IAAvC,mBAAOuE,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,eAAC,KAAD,CACCC,IAAKJ,EACLjX,UAAS,2BAAsB4Q,EAAU,YAAc,GAA9C,YAA6D,UAATlC,EAAmB,QAAU,IAC1F4I,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAA1K,GAChBgK,EAAShK,GACTkK,EAAYlK,EApCamJ,GAAWjH,KAAI,SAACpC,GAC1C,IAAM2J,EAAW3J,EAAKjE,IAAI4C,MAAM,KAAK,GACrC,MAAO,CACNkB,MAAOG,EAAKhE,KACZ6O,MACC,eAAC,IAAD,CAAMlI,GAAI3C,EAAKhE,KAAf,SACC,uBAAK5I,UAAU,mBAAf,UACC,sBAAKA,UAAU,OAAf,SACEsW,GAAgBC,KAElB,iCACC,sBAAKvW,UAAU,uBAAf,SAAsC,eAAC,GAAD,CAAayN,GAAIb,EAAK/D,UAC5D,uBAAK7I,UAAU,0BAAf,UAA0CuW,EAA1C,mBAwBqB,KAmBxB9J,MAAOA,EACPiL,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAOnL,MAAMhD,cAAc6B,QAAQqM,EAAWlO,gBAThD,SAYC,eAAC,KAAD,CAAOoO,YAAY,YAAaC,OAAQ,eAACC,GAAA,EAAD,CAAgB/X,UAAU,cC3ErDgY,GAtBS,SAAClY,GACxB,IAAQ8W,EAAkB9W,EAAlB8W,OAAQC,EAAU/W,EAAV+W,MAChB,EAAgB5I,qBAAWC,IACnB3L,EADR,oBACQA,eACFmM,EAAOJ,GAAM6B,iBAAiB5N,GAEpC,OACE,uBACEvC,UAAS,qBAAgB4W,EAAS,oBAAsB,GAA/C,YAAqDlI,GAC9DC,MAAO,CAAEc,gBAAiBlN,GAF5B,UAIE,sBAAKvC,UAAU,kCAAf,SACE,eAAC,GAAD,CAAa6W,MAAOA,EAAOD,OAAQA,MAErC,sBAAK5W,UAAU,YAAYsP,QAASuH,EAApC,SACE,eAACoB,GAAA,EAAD,U,qBCFAC,GAAWrI,IAAXqI,OA+EOC,GA7EU,WACvB,MAA0BlK,qBAAWC,IAArC,mBAAO9K,EAAP,KAAc0O,EAAd,KACQpP,EAA4CU,EAA5CV,UAAWD,EAAiCW,EAAjCX,aAAcF,EAAmBa,EAAnBb,eACjC,EAAwCiQ,oBAAS,GAAjD,mBAAO4F,EAAP,KAAqBC,EAArB,KACMzH,GAAYtC,GAAMC,cAAcnB,QAAiBoB,SAAS,MAC1D8J,EAAgB,WACpBD,GAAgB,IAUZxH,EAAWzN,EAAMf,UAAY1B,IAS7B4X,EAPChW,EAKE+L,GAAM6B,iBAAiB5N,GAJrB+L,GAAM6B,iBACM,SAAjB1N,EAA0B,SAAW,WAsB3C,OANAqQ,qBAAU,WACHlC,GACH0H,OAKF,eAACJ,GAAD,CACElY,UAAS,qBAAgBuY,GACzB5J,MAAO,CAAEc,gBAAiBlN,GAF5B,SAIE,uBAAKvC,UAAS,6BAAwB6Q,EAAW,iBAAmB,IAApE,UACE,eAAC,GAAD,CAAM2H,SAAUD,IAChB,uBAAKvY,UAAU,MAAM2O,MAAO,CAAEoB,MAAM,eAAD,OAtBnCc,GAAYD,EACP,MAELxN,EAAMlB,aACF,GAAN,OAAU3B,IAAV,MAEM,GAAN,OAAUD,IAAV,MAgBqC,MAAnC,UACE,sBAAKN,UAAU,WAAf,SACE,qBAAIA,UAAU,6CAAd,SACG6Q,IAAaD,EAAW,KACvB,qBACE5Q,UAAU,yCACVsP,QAAS,WA3CrBwC,EAHGlB,EAGM,CAAEtN,KAAMoO,GAAmBrL,SAAUjD,EAAMZ,WAF3C,CAAEc,KAAM8N,GAAsB/K,SAAUjD,EAAMlB,gBA2C7C,SAMGkB,EAAMlB,cAAgB0O,EACrB,eAAC6H,GAAA,EAAD,CAAoBzY,UAAU,aAE9B,eAAC0Y,GAAA,EAAD,CAAkB1Y,UAAU,mBAMtC,sBAAKA,UAAU,YAAf,SACE,eAAC,GAAD,CAAU0C,UAAWA,MAEvB,eAAC,GAAD,CAAWkU,OAAQwB,EAAcvB,MAAOyB,a,UCtF9CK,GAAiB,CACpB,OAAS,eAAC,GAAD,CAAalL,GAAG,UAG1BvE,GAAiB8C,SAAQ,SAAC+B,EAAK7B,GAC9B,IAAM0M,EAAmB,SAACC,GAAD,OAASF,GAAeE,EAAIjQ,MAAQ,eAAC,GAAD,CAAa6E,GAAIoL,EAAIhQ,SAClF+P,EAAiB7K,GACbA,EAAI9E,SACP8E,EAAI9E,QAAQ+C,SAAS,SAAA+B,GACpB6K,EAAiB7K,GACdA,EAAI9E,SACN8E,EAAI9E,QAAQ+C,SAAS,SAAA+B,GACpB6K,EAAiB7K,YAOtB,IAAM+K,GAAkBC,aAAW,SAAAjZ,GAClC,IACMkZ,EADelZ,EAAbmZ,SACsBC,SAAS3N,MAAM,KAAKoB,QAAO,SAAAT,GAAC,OAAIA,KACxDiN,EAAkBH,EAAahK,KAAI,SAACoK,EAAGtL,GAC1C,IAAMuL,EAAG,WAAOL,EAAaM,MAAM,EAAGxL,EAAQ,GAAG3B,KAAK,MACtD,OACE,eAAC,KAAWkD,KAAZ,UACE,eAAC,IAAD,CAAME,GAAI8J,EAAV,SAAgBV,GAAeU,MADXA,MAM1B,OACA,eAAC,KAAD,UACEF,OAaWI,GARf,gKACC,WACC,OACC,eAACT,GAAD,QAHH,GAAmCrQ,aC1BpB+Q,GAdW,SAAC,GAAwB,IAAtB3Q,EAAqB,EAArBA,MAC5B,OADiD,EAAd4Q,QAGjC,uBAAKzZ,UAAU,kBAAf,UACC,qBAAIA,UAAU,iCAAd,SACC,eAAC,GAAD,CAAayN,GAAI5E,GAAe,WAEjC,eAAC,GAAD,OAGA,MCXW,SAAS6Q,KACvB,OACC,yBAAQ1Z,UAAU,SAAlB,SACC,iEAA6B,IAAI2Z,MAAOC,eAAxC,IAAyD,uBAAM5Z,UAAU,uBAAhB,mBAA2C4B,QAApG,6BCDI,IAAMiY,GAAW,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAASrJ,MAAM,YAAnC,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO7H,KAAI,UAAK7G,KAAL,SAA6BgY,UAAWC,gBAAK,kBAAM,oCAC9D,eAAC,IAAD,CAAUC,KAAI,UAAKlY,MAAmBwN,GAAE,UAAKxN,KAAL,iBAMjCwG,OAAM2R,KAAKL,ICUlBM,GAAYtK,IAAZsK,QACA/M,GAAkBC,IAAlBD,cAEKgN,GAAY,WACvB,MAAgBnM,qBAAWC,IAApB9K,EAAP,oBACQlB,EAAqCkB,EAArClB,aAAcG,EAAuBe,EAAvBf,QAASK,EAAcU,EAAdV,UAC3BuW,EAAWoB,cAETC,EAAmBhM,GAAMxE,aAC7BZ,GACA+P,EAASC,UAEX9V,EAAM+K,UAAYmM,EAClB,IACM1J,GADUtC,GAAMC,cAAcnB,MACVoB,SAAS,MAC7B+L,EAAYlY,IAAY3B,IACxBmQ,EAAWxO,IAAY1B,IACvB6Z,EAAkB,WACtB,OAAI3J,GAAYD,EACP,EAEF1O,EAAe3B,IAA2BD,KAKnD,GAAe,YAFIqU,8BAAX8F,OAGN,OAAO,eAAC,GAAD,CAAShK,MAAM,SAaxB,OACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAWG,SAAUA,IACpBC,IAAaD,EAAW,eAAC,GAAD,CAAQzC,UAAWmM,IAAuB,KACnE,gBAAC,IAAD,CAAQta,UAAU,gBAAlB,UACGua,IAAc3J,EACb,eAAC,GAAD,CAASzC,UAAWmM,IAClB,KACJ,gBAAC,IAAD,CAAQta,UAAU,aAAa2O,MAjB/BjM,IAAc9B,IACT,CAAE8Z,YAAaF,KAEpB9X,IAAc7B,IACT,CAAE8Z,aAAcH,KAElB,CAAEE,YAAaF,KAWlB,UACE,uBAAKxa,UAAS,sBAAiB6Q,EAAW,iBAAmB,IAA7D,UACE,eAAC,GAAD,CACE4I,QAAO,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAkBtR,WAC3BH,MAAK,OAAEyR,QAAF,IAAEA,OAAF,EAAEA,EAAkBzR,QAE3B,eAACsR,GAAD,UACE,eAAC,GAAD,SAGJ,eAACT,GAAD,UAGH9I,GAAY,eAAC,GAAD,QAUJrI,OAAM2R,KAAKE,IC1EXP,GAlBS,WACtB,OACE,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,CAASrJ,MAAM,SAAnC,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO7H,KAAI,UAAK5G,KAAL,UAA+B+X,UAAWC,gBAAK,kBAAM,uEAChE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,YAAiC+X,UAAWC,gBAAK,kBAAM,uEAClE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,YAAiC+X,UAAWC,gBAAK,kBAAM,gEAClE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,eAAoC+X,UAAWC,gBAAK,kBAAM,wEACrE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,eAAoC+X,UAAWC,gBAAK,kBAAM,iEACrE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,oBAAyC+X,UAAWC,gBAAK,kBAAM,iEAC1E,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,YAAiC+X,UAAWC,gBAAK,kBAAM,mCAClE,eAAC,IAAD,CAAOpR,KAAI,UAAK5G,KAAL,YAAiC+X,UAAWC,gBAAK,kBAAM,oCAClE,eAAC,IAAD,CAAUC,KAAI,UAAKjY,MAAoBuN,GAAE,UAAKvN,KAAL,kBCFlC4Y,GAXW,WACzB,OACC,sBAAK5a,UAAU,iBAAf,SACC,eAAC,IAAD,UACC,eAAC,IAAD,CAAO4I,KAAK,GAAGmR,UAAWc,U,oBCEfC,GAPA,CACbC,KAAMC,KACN5Y,OAAQ,QACR6Y,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACNhZ,OAAQ,KACR6Y,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNnZ,OAAQ,QACR6Y,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACN7Z,OAAQ,QACR6Y,SAAS,eACJiB,M,mBCLDC,GAAe,SAAAnc,GAAS,OAAIoc,SAASC,KAAKC,UAAUC,IAAIvc,IACxDwc,GAAkB,SAAAxc,GAAS,OAAIoc,SAASC,KAAKC,UAAUG,OAAOzc,ICQ7D,IA8BQ0c,GA9BM,WACnB,IDPmC1c,ECOnC,EAAgBiO,qBAAWC,IAApB9K,EAAP,oBACQhB,EAAsBgB,EAAtBhB,OAAQM,EAAcU,EAAdV,UACVuW,EAAWoB,cAEXsC,EAAmBlB,GAAUrZ,GAGnC,ODdmCpC,ECYtB,OAAD,OAAQ0C,GDXlBoQ,qBACD,WAKC,OAHA9S,aAAqB4c,MAAQ5c,EAAUgP,IAAImN,IAAgBA,GAAanc,GAGjE,WACLA,aAAqB4c,MAAQ5c,EAAUgP,IAAIwN,IAAmBA,GAAgBxc,MAGjF,CAACA,ICIA,eAAC,KAAD,CACEoC,OAAQua,EAAiBva,OACzB6Y,SAAU0B,EAAiB1B,SAF7B,SAIE,eAAC,KAAD,CAAgB7Y,OAAQua,EAAiB5B,KAAMrY,UAAWA,EAA1D,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOma,OAAK,EAACjU,KAAK,IAAlB,SACE,eAAC,IAAD,CAAU2G,GAAIxN,SAEhB,eAAC,IAAD,CAAO6G,KAAM5G,KAAb,SACE,eAAC,GAAD,CAAYU,UAAWA,MAEzB,eAAC,IAAD,CAAOkG,KAAM7G,KAAb,SACE,eAAC,GAAD,CAAWW,UAAWA,EAAWuW,SAAUA,cChB1C6D,GAAoB,CAC/B5a,cAAc,EACdC,aAAc3B,IACd4B,OAAQ,KACRC,QAAS3B,IACT4B,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,QACdC,UAAW9B,KAwDEmc,GArDM,WAAwC,IAAvC3Z,EAAsC,uDAA9B0Z,GAAmBzZ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAK8N,GACH,OAAO,2BACFhO,GADL,IAEElB,aAAcmB,EAAOgD,UAEzB,KAAKiL,GACH,OAAO,2BACFlO,GADL,IAEEjB,aAAckB,EAAOgD,UAEzB,KAAKgL,GACH,OAAO,2BACFjO,GADL,IAEEhB,OAAQiB,EAAOgD,UAEnB,KAAKkL,GACH,OAAO,2BACFnO,GADL,IAEEf,QAASgB,EAAOgD,UAEpB,KAAKmL,GACH,OAAO,2BACFpO,GADL,IAEEd,YAAae,EAAOgD,UAExB,KAAKoL,GACH,OAAO,2BACFrO,GADL,IAEEb,eAAgBc,EAAOgD,UAE3B,KAAKqL,GACH,OAAO,2BACFtO,GADL,IAEEZ,UAAWa,EAAOgD,UAEtB,KAAKsL,GACH,OAAO,2BACFvO,GADL,IAGEX,aAAcY,EAAOgD,UAEzB,KAAKuL,GACH,OAAO,2BACFxO,GADL,IAEEV,UAAWW,EAAOgD,UAEtB,QACE,OAAOjD,ICpEPyR,GAAS,CACbmI,KAAK,GAAD,OAAKC,GAAL,uBACJC,MAAM,GAAD,OAAKD,GAAL,yBAIM/O,GAAaiP,0BAyBXC,OAtBf,WAEE,MAA0BC,qBAAWN,GAAcD,IAAnD,mBAAO1Z,EAAP,KAAc0O,EAAd,KAEA,OACE,eAAC5D,GAAYoP,SAAb,CAAsB7Q,MAAO,CAACrJ,EAAO0O,GAArC,SACA,sBAAK9R,UAAU,MAAf,SACE,eAAC,IAAD,CAAUyH,MAAOA,EAAjB,SACE,eAAC,yBAAD,CAAuB8V,SAAU1I,GAAQ2I,aAAcvb,KAAaQ,aAAcgb,eAAe,yBAAjG,SACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO7U,KAAK,IAAImR,UAAW2C,KAC3B,eAAC,IAAD,CAAO9T,KAAK,yBCnBN8U,QACW,cAA7B9V,OAAOqR,SAAS0E,UAEe,UAA7B/V,OAAOqR,SAAS0E,UAEhB/V,OAAOqR,SAAS0E,SAASrU,MACvB,2D,OCZNsU,IAASC,OAAO,eAAC,GAAD,IAASzB,SAAS0B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7Y,MAAK,SAAA8Y,GACjCA,EAAaC,iB,gCEnInB,4RAuBaxX,EAAgB,SAAC3D,GAC5B,MAAO,CACLM,KAAMvC,IACNiC,UAUS+D,EAAiB,WAC5B,MAAO,CACLzD,KAAMrC,MAWG+F,EAAgB,SAAChE,GAC5B,MAAO,CACLM,KAAMnC,IACN6B,UAUSiE,EAAgC,SAACjE,GAC5C,MAAO,CACLM,KAAM7B,IACNuB,UAUSkE,EAAkC,SAAClE,GAC9C,MAAO,CACLM,KAAM3B,IACNqB,UAISwD,EAAkB,SAAC3D,GAC9B,MAAO,CACLS,KAAMlC,IACNyB,YAISub,EAAkB,WAC7B,MAAO,CACL9a,KAAMjC,MAIGgd,EAAc,WACzB,MAAO,CACL/a,KAAMhC,Q","file":"static/js/main.36708f6c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","import { combineReducers } from \"redux\";\r\nimport Auth from \"./Auth\";\r\n\r\nconst reducers = combineReducers({\r\n  auth: Auth,\r\n});\r\n\r\nexport default reducers;\r\n","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'home',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { useContext } from \"react\";\r\nimport { MainContext } from \"App\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const [dispatch] = useContext(MainContext);\r\n  const { sideNavTheme, routeInfo, hideGroupTitle, localization } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      // dispatch({ type: TOGGLE_MOBILE_NAV, payload: false });\r\n    }\r\n  };\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link\r\n                        onClick={() => closeMobileNav()}\r\n                        to={subMenuSecond.path}\r\n                      />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link\r\n                    onClick={() => closeMobileNav()}\r\n                    to={subMenuFirst.path}\r\n                  />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? (\r\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\r\n            ) : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nexport default MenuContent;\r\n","import React, { useContext } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_DARK,\r\n  NAV_TYPE_SIDE,\r\n} from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { MainContext } from \"App\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = () => {\r\n  const [state] = useContext(MainContext);\r\n  state.localization = true;\r\n  state.hideGroupTitle = \"\";\r\n  return (\r\n    <Sider\r\n      className={`side-nav ${\r\n        state.sideNavTheme === SIDE_NAV_DARK ? \"side-nav-dark\" : \"\"\r\n      }`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={state.navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent type={NAV_TYPE_SIDE} {...state} />\r\n      </Scrollbars>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React, { useContext } from \"react\";\r\nimport { NAV_TYPE_TOP } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { MainContext } from \"App\";\r\n\r\nexport const TopNav = () => {\r\n  const [state] = useContext(MainContext);\r\n  return (\r\n    <div\r\n      className={`top-nav ${utils.getColorContrast(state.topNavColor)}`}\r\n      style={{ backgroundColor: state.topNavColor }}\r\n    >\r\n      <div className=\"top-nav-wrapper\">\r\n        <MenuContent type={NAV_TYPE_TOP} {...state} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React, { useContext } from \"react\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from \"constants/ThemeConstant\";\r\nimport { APP_NAME } from \"configs/AppConfig\";\r\nimport utils from \"utils\";\r\nimport { Grid } from \"antd\";\r\nimport { MainContext } from \"App\";\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0;\r\n  }\r\n  if (isNavTop) {\r\n    return \"auto\";\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  }\r\n};\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, currentTheme } = props;\r\n  if (currentTheme === \"dark\") {\r\n    if (navCollapsed) {\r\n      return \"/img/logo-sm-white.png\";\r\n    }\r\n    return \"/img/logo-white.png\";\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return \"/img/logo-sm.png\";\r\n  }\r\n  return \"/img/logo.png\";\r\n};\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return \"d-none\";\r\n  } else {\r\n    return \"logo\";\r\n  }\r\n};\r\n\r\nexport const Logo = () => {\r\n  const [state] = useContext(MainContext);\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, state.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(state, isMobile)}` }}\r\n    >\r\n      <img src={getLogo(state)} alt={`${APP_NAME} logo`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","export const TOGGLE_COLLAPSED_NAV = \"TOGGLE_COLLAPSED_NAV\";\r\nexport const CHANGE_LOCALE = \"CHANGE_LOCALE\";\r\nexport const SIDE_NAV_STYLE_CHANGE = \"SIDE_NAV_STYLE_CHANGE\";\r\nexport const NAV_TYPE_CHANGE = \"NAV_TYPE_CHANGE\";\r\nexport const TOP_NAV_COLOR_CHANGE = \"TOP_NAV_COLOR_CHANGE\";\r\nexport const HEADER_NAV_COLOR_CHANGE = \"HEADER_NAV_COLOR_CHANGE\";\r\nexport const TOGGLE_MOBILE_NAV = \"TOGGLE_MOBILE_NAV\";\r\nexport const SWITCH_THEME = \"SWITCH_THEME\";\r\nexport const DIRECTION_CHANGE = \"DIRECTION_CHANGE\";\r\n","import React, { useContext } from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { MainContext } from \"App\";\r\nimport { TOGGLE_MOBILE_NAV } from \"Context-api/actionsType/ThemeActionType\";\r\n\r\nexport const MobileNav = () => {\r\n  const [state, dispatch] = useContext(MainContext);\r\n  const { mobileNav } = state;\r\n  const onClose = () => {\r\n    dispatch({ type: TOGGLE_MOBILE_NAV, payload: false });\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...state} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\n\r\nexport default MobileNav\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React, { useContext } from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { MainContext } from \"App\";\r\nimport { CHANGE_LOCALE } from \"Context-api/actionsType/ThemeActionType\";\r\n\r\nfunction getLanguageDetail(locale) {\r\n  const data = lang.filter((elm) => elm.langId === locale);\r\n  return data[0];\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n  const language = getLanguageDetail(locale);\r\n  const { langName, icon } = language;\r\n  return (\r\n    <div className=\"d-flex align-items-center\">\r\n      <img\r\n        style={{ maxWidth: \"20px\" }}\r\n        src={`/img/flags/${icon}.png`}\r\n        alt={langName}\r\n      />\r\n      <span className=\"font-weight-semibold ml-2\">\r\n        {langName} <DownOutlined className=\"font-size-xs\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NavLanguage = ({ configDisplay }) => {\r\n  const [state, dispatch] = useContext(MainContext);\r\n  const { locale } = state;\r\n  const languageOption = (\r\n    <Menu>\r\n      {lang.map((elm, i) => {\r\n        return (\r\n          <Menu.Item\r\n            key={i}\r\n            className={\r\n              locale === elm.langId ? \"ant-dropdown-menu-item-active\" : \"\"\r\n            }\r\n            onClick={() =>\r\n              dispatch({ type: CHANGE_LOCALE, payload: elm.langId })\r\n            }\r\n          >\r\n            <span className=\"d-flex justify-content-between align-items-center\">\r\n              <div>\r\n                <img\r\n                  style={{ maxWidth: \"20px\" }}\r\n                  src={`/img/flags/${elm.icon}.png`}\r\n                  alt={elm.langName}\r\n                />\r\n                <span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n              </div>\r\n              {locale === elm.langId ? (\r\n                <CheckOutlined className=\"text-success\" />\r\n              ) : null}\r\n            </span>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown\r\n      placement=\"bottomRight\"\r\n      overlay={languageOption}\r\n      trigger={[\"click\"]}\r\n    >\r\n      {configDisplay ? (\r\n        <a href=\"#/\" className=\"text-gray\" onClick={(e) => e.preventDefault()}>\r\n          <SelectedLanguage locale={locale} />\r\n        </a>\r\n      ) : (\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item>\r\n            <a href=\"#/\" onClick={(e) => e.preventDefault()}>\r\n              <GlobalOutlined className=\"nav-icon mr-0\" />\r\n            </a>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NavLanguage;\r\n","import React, { useContext } from \"react\";\r\nimport { Radio, Switch, Button, message } from \"antd\";\r\n\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport ColorPicker from \"components/shared-components/ColorPicker\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport NavLanguage from \"./NavLanguage\";\r\nimport {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_DARK,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from \"utils/index\";\r\nimport { MainContext } from \"App\";\r\nimport {\r\n  SWITCH_THEME,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  DIRECTION_CHANGE,\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n} from \"Context-api/actionsType/ThemeActionType\";\r\n\r\nconst colorOptions = [\"#3e82f7\", \"#24a772\", \"#de4436\", \"#924aca\", \"#193550\"];\r\n\r\nconst ListOption = ({ name, selector, disabled, vertical }) => (\r\n  <div\r\n    className={`my-4 ${\r\n      vertical ? \"\" : \"d-flex align-items-center justify-content-between\"\r\n    }`}\r\n  >\r\n    <div\r\n      className={`${disabled ? \"opacity-0-3\" : \"\"} ${vertical ? \"mb-3\" : \"\"}`}\r\n    >\r\n      {name}\r\n    </div>\r\n    <div>{selector}</div>\r\n  </div>\r\n);\r\n\r\nexport const ThemeConfigurator = () => {\r\n  const [state, dispatch] = useContext(MainContext);\r\n  const {\r\n    navType,\r\n    sideNavTheme,\r\n    navCollapsed,\r\n    topNavColor,\r\n    headerNavColor,\r\n    locale,\r\n    currentTheme,\r\n    direction,\r\n  } = state;\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n\r\n  const { switcher, themes } = useThemeSwitcher();\r\n\r\n  //handle darkmode/ligth mode\r\n  const toggleTheme2 = (isChecked) => {\r\n    dispatch({ type: HEADER_NAV_COLOR_CHANGE, payload: \"\" });\r\n    const changedTheme = isChecked ? \"dark\" : \"light\";\r\n    dispatch({ type: SWITCH_THEME, payload: changedTheme });\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n  // change direction ltr/rtl\r\n  const handleDirection = (e) => {\r\n    dispatch({ type: DIRECTION_CHANGE, payload: e.target.value });\r\n  };\r\n\r\n  // handle Side Nav Collapse\r\n  const handleSideNavCollapse = () => {\r\n    dispatch({ type: TOGGLE_COLLAPSED_NAV, payload: !navCollapsed });\r\n  };\r\n\r\n  // handle Navigation Type (top/side)\r\n  const onNavTypeClick2 = (value) => {\r\n    dispatch({ type: HEADER_NAV_COLOR_CHANGE, payload: \"\" });\r\n    if (value === NAV_TYPE_TOP) {\r\n      dispatch({ type: TOP_NAV_COLOR_CHANGE, payload: colorOptions[0] });\r\n      dispatch({ type: TOGGLE_COLLAPSED_NAV, payload: false });\r\n    }\r\n    dispatch({ type: NAV_TYPE_CHANGE, payload: value });\r\n  };\r\n\r\n  // handle onHeaderNavColorClick\r\n  const onHeaderNavColorClick2 = (value) => {\r\n    const { rgb } = value;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    const hex = utils.rgbaToHex(rgba);\r\n    dispatch({ type: HEADER_NAV_COLOR_CHANGE, payload: hex });\r\n  };\r\n\r\n  // handle onHeaderNavColorClick\r\n  const ontopNavColorClick2 = (value) => {\r\n    // onHeaderNavColorChange(\"\");\r\n    dispatch({ type: HEADER_NAV_COLOR_CHANGE, payload: \"\" });\r\n    const { rgb } = value;\r\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\r\n    const hex = utils.rgbaToHex(rgba);\r\n    // onTopNavColorChange(hex);\r\n    dispatch({ type: TOP_NAV_COLOR_CHANGE, payload: hex });\r\n  };\r\n\r\n  const genCopySettingJson = (configState) =>\r\n    JSON.stringify(configState, null, 2);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-5\">\r\n        <h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n        {isNavTop ? (\r\n          <>\r\n            <ListOption\r\n              name=\"Top Nav Color:\"\r\n              vertical\r\n              selector={\r\n                <ColorPicker\r\n                  color={topNavColor}\r\n                  colorChange={ontopNavColorClick2}\r\n                />\r\n              }\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <ListOption\r\n              name=\"Header Nav Color:\"\r\n              vertical\r\n              selector={\r\n                <ColorPicker\r\n                  color={headerNavColor}\r\n                  colorChange={onHeaderNavColorClick2}\r\n                />\r\n              }\r\n            />\r\n          </>\r\n        )}\r\n\r\n        <ListOption\r\n          name=\"Navigation Type:\"\r\n          selector={\r\n            <Radio.Group\r\n              size=\"small\"\r\n              onChange={(e) => onNavTypeClick2(e.target.value)}\r\n              value={navType}\r\n            >\r\n              <Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n              <Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n        />\r\n        <ListOption\r\n          name=\"Side Nav Color:\"\r\n          selector={\r\n            <Radio.Group\r\n              disabled={isNavTop}\r\n              size=\"small\"\r\n              onChange={(e) =>\r\n                dispatch({\r\n                  type: SIDE_NAV_STYLE_CHANGE,\r\n                  payload: e.target.value,\r\n                })\r\n              }\r\n              value={sideNavTheme}\r\n            >\r\n              <Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n              <Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n          disabled={isNavTop}\r\n        />\r\n        <ListOption\r\n          name=\"Side Nav Collapse:\"\r\n          selector={\r\n            <Switch\r\n              disabled={isNavTop}\r\n              checked={navCollapsed}\r\n              onChange={handleSideNavCollapse}\r\n            />\r\n          }\r\n          disabled={isNavTop}\r\n        />\r\n        <ListOption\r\n          name=\"Dark Theme:\"\r\n          selector={\r\n            <Switch checked={currentTheme === \"dark\"} onChange={toggleTheme2} />\r\n          }\r\n        />\r\n        <ListOption\r\n          name=\"Direction:\"\r\n          selector={\r\n            <Radio.Group\r\n              size=\"small\"\r\n              onChange={handleDirection}\r\n              value={direction}\r\n            >\r\n              <Radio.Button value={DIR_LTR}>LTR</Radio.Button>\r\n              <Radio.Button value={DIR_RTL}>RTL</Radio.Button>\r\n            </Radio.Group>\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"mb-5\">\r\n        <h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n        <ListOption name=\"Language:\" selector={<NavLanguage configDisplay />} />\r\n      </div>\r\n      <div>\r\n        <CopyToClipboard\r\n          text={genCopySettingJson({\r\n            navType,\r\n            sideNavTheme,\r\n            navCollapsed,\r\n            topNavColor,\r\n            headerNavColor,\r\n            locale,\r\n            currentTheme,\r\n            direction,\r\n          })}\r\n          onCopy={() =>\r\n            message.success(\r\n              \"Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.\"\r\n            )\r\n          }\r\n        >\r\n          <Button icon={<CopyOutlined />} block>\r\n            <span>Copy Setting</span>\r\n          </Button>\r\n        </CopyToClipboard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeConfigurator;\r\n","import React, { Component } from \"react\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\nimport { Drawer, Menu } from \"antd\";\r\nimport ThemeConfigurator from \"./ThemeConfigurator\";\r\nimport { DIR_RTL } from \"constants/ThemeConstant\";\r\n\r\nexport class NavPanel extends Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement={this.props.direction === DIR_RTL ? \"left\" : \"right\"}\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator />\r\n        </Drawer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavPanel;\r\n","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useContext } from \"react\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport utils from \"utils\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { MainContext } from \"App\";\r\n\r\nexport const NavSearch = (props) => {\r\n  const { active, close } = props;\r\n  const [state] = useContext(MainContext);\r\n  const { headerNavColor } = state;\r\n  const mode = utils.getColorContrast(headerNavColor);\r\n\r\n  return (\r\n    <div\r\n      className={`nav-search ${active ? \"nav-search-active\" : \"\"} ${mode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className=\"d-flex align-items-center w-100\">\r\n        <SearchInput close={close} active={active} />\r\n      </div>\r\n      <div className=\"nav-close\" onClick={close}>\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default (NavSearch);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\r\nimport Logo from \"./Logo\";\r\nimport NavPanel from \"./NavPanel\";\r\nimport NavSearch from \"./NavSearch\";\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { MainContext } from \"App\";\r\nimport {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  TOGGLE_MOBILE_NAV,\r\n} from \"Context-api/actionsType/ThemeActionType\";\r\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = () => {\r\n  const [state, dispatch] = useContext(MainContext);\r\n  const { direction, currentTheme, headerNavColor } = state;\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      dispatch({ type: TOGGLE_COLLAPSED_NAV, payload: !state.navCollapsed });\r\n    } else {\r\n      dispatch({ type: TOGGLE_MOBILE_NAV, payload: !state.mobileNav });\r\n    }\r\n  };\r\n\r\n  const isNavTop = state.navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === \"dark\" ? \"#00000\" : \"#ffffff\"\r\n      );\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  };\r\n  const navMode = mode();\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return \"0px\";\r\n    }\r\n    if (state.navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className=\"ant-menu-item ant-menu-item-only-child\"\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {state.navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel direction={direction} />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose} />\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\nexport default HeaderNav;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from \"react\";\r\nimport SideNav from \"components/layout-components/SideNav\";\r\nimport TopNav from \"components/layout-components/TopNav\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport MobileNav from \"components/layout-components/MobileNav\";\r\nimport HeaderNav from \"components/layout-components/HeaderNav\";\r\nimport PageHeader from \"components/layout-components/PageHeader\";\r\nimport Footer from \"components/layout-components/Footer\";\r\nimport AppViews from \"views/app-views\";\r\nimport { Layout, Grid } from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { MainContext } from \"App\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = () => {\r\n  const [state] = useContext(MainContext);\r\n  const { navCollapsed, navType, direction } = state;\r\n  let location = useLocation();\r\n\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  );\r\n  state.routeInfo = currentRouteInfo;\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes(\"lg\");\r\n  const isNavSide = navType === NAV_TYPE_SIDE;\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0;\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\r\n  };\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === \"loading\") {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() };\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() };\r\n    }\r\n    return { paddingLeft: getLayoutGutter() };\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? \"layout-top-nav\" : \"\"}`}>\r\n            <PageHeader\r\n              display={currentRouteInfo?.breadcrumb}\r\n              title={currentRouteInfo?.title}\r\n            />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = ({ theme }) => {\r\n//   const { navCollapsed, navType, locale } = theme;\r\n//   return { navCollapsed, navType, locale };\r\n// };\r\n\r\nexport default React.memo(AppLayout);\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React, { useContext } from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from \"layouts/auth-layout\";\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from \"configs/AppConfig\";\r\nimport useBodyClass from \"hooks/useBodyClass\";\r\nimport { MainContext } from \"App\";\r\n\r\nexport const Views = () => {\r\n  const [state] = useContext(MainContext); //from app.js\r\n  const { locale, direction } = state;\r\n  const location = useLocation();\r\n\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout direction={direction} location={location} />\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default Views;\r\n","import {\r\n  SIDE_NAV_LIGHT,\r\n  NAV_TYPE_SIDE,\r\n  DIR_LTR,\r\n} from \"../../constants/ThemeConstant\";\r\nimport {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE,\r\n} from \"../actionsType/ThemeActionType\";\r\n\r\nexport const initialThemeState = {\r\n  navCollapsed: false,\r\n  sideNavTheme: SIDE_NAV_LIGHT,\r\n  locale: \"en\",\r\n  navType: NAV_TYPE_SIDE,\r\n  topNavColor: \"#3e82f7\",\r\n  headerNavColor: \"\",\r\n  mobileNav: false,\r\n  currentTheme: \"light\",\r\n  direction: DIR_LTR,\r\n};\r\n\r\nconst themeReducer = (state = initialThemeState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.payload,\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.payload,\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.payload,\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.payload,\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.payload,\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.payload,\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.payload,\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        // currentTheme: action.currentTheme,\r\n        currentTheme: action.payload,\r\n      };\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\nimport themeReducer, { initialThemeState } from 'Context-api/reducers/themeReducer';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\n\r\nexport const MainContext =createContext()\r\n\r\n\r\nfunction App() {\r\n\r\n  const [state, dispatch] = useReducer(themeReducer, initialThemeState);\r\n\r\n  return (\r\n    <MainContext.Provider value={[state, dispatch]}>\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n              <Route path=\"/about\"></Route>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n    </MainContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}